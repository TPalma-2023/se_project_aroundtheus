!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._element.querySelector(".card__remove-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}_handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._element.remove(),this._element=null}getView(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_setEventListeners(){const e=[...this._form.querySelectorAll(this._inputSelector)],t=this._form.querySelector(this._submitButtonSelector);e.forEach((s=>{s.addEventListener("input",(n=>{this._checkInputValidity(s),this._toggleButtonState(e,t,this._inactiveButtonClass)}))}))}_toggleButtonState(e,t,s){this._hasInvalidInput(e)?this._disableSubmitButton():(t.classList.remove(s),t.disabled=!1)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_disableSubmitButton(){const e=this._form.querySelector(this._submitButtonSelector);e.classList.add(this._inactiveButtonClass),e.disabled=!0}}class s{constructor(e){this._modalElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_clickToCloseOpenedModal(e){(e.target.classList.contains("modal__button-close")||e.target.classList.contains("modal_opened"))&&this.close()}setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{this._clickToCloseOpenedModal(e)}))}}class n extends s{constructor(e,t){super(e),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=[...this._modalForm.querySelectorAll(".modal__input")],this._inputValues={}}close(){this._modalForm.reset(),super.close()}_getInputValues(){return this._inputEls.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setInputValues(e){this._inputEls.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-modal"),i=document.querySelector("#add-card-modal"),l=document.querySelector("#image-modal"),a=document.querySelector(".profile__edit-button"),c=(r.querySelector(".modal__button-close"),i.querySelector(".modal__button-close"),l.querySelector(".modal__button-close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),r.querySelector(".modal__form"),i.querySelector(".modal__form")),d=document.querySelector("#profile-title-input"),u=(c.querySelector(".modal__input_type_title"),c.querySelector(".modal__input_type_url"),document.querySelector("#profile-description-input")),_=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),m=new class{constructor(e,t){this._userNameEl=document.querySelector(e),this._userJobEl=document.querySelector(t)}getUserInfo(){return{name:this._userNameEl.textContent,description:this._userJobEl.textContent}}setUserInfo(e){this._userNameEl.textContent=e.title,this._userJobEl.textContent=e.description}}(".profile__title",".profile__description"),h=new class extends s{constructor(e){super(e),this._modalImage=document.querySelector(".modal__image"),this._modalImageDescription=document.querySelector(".modal__caption"),this.setEventListeners()}open(e){this._modalImage.src=e.link,this._modalImage.alt=e.name,this._modalImageDescription.textContent=e.name,super.open()}}("#image-modal");h.setEventListeners();const p=new class{constructor(e,t){let{renderer:s,items:n}=e;this._renderer=s,this._items=n.filter((e=>void 0!==e)),this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);t&&this._container.append(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=S(e);p.addItem(t)}},".cards__list");p.renderItems(),new t(o,r).enableValidation();const E=new t(o,i);function S(t){return new e(t,"#card-template",v).getView()}function v(e){h.open(e)}E.enableValidation(),a.addEventListener("click",(()=>{const e=m.getUserInfo();d.value=e.name,u.value=e.description,y.open()})),_.addEventListener("click",(()=>{E._disableSubmitButton(),f.open()}));const y=new n("#profile-edit-modal",(function(e){m.setUserInfo(e),y.close()}));y.setEventListeners();const f=new n("#add-card-modal",(function(e){const t=e.title,s=e.url;if(t&&s){const e=S({name:t,link:s});p.addItem(e)}}));f.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,